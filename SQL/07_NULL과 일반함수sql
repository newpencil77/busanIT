--NULL 관련 함수
--NVL 널 값을 다른 값으로 교체
SELECT 
last_name, 
NVL(manager_id, 0) AS 매니저
    FROM employees
    WHERE last_name = 'King';
    
--NVL2(expr, expr1, expr2) //expr의 값이 NULL이 아닌 경우에 expr1 반환, NULL이면 expr2 반환
SELECT last_name, NVL2(manager_id, 1, 0)
    FROM employees
    WHERE last_name = 'King';
    
--NULLIF
--- NULLIF(exp1, exp2)
--- 괄호 안의 값이 동일하면 NULL을 그렇지 않으면 exp1을 반환
SELECT 
NULLIF(1,1), --값이 같아서 NULL
NULLIF(1,2) --값이 달라서 exp1인 1 반환
    FROM DUAL;
    
--COALESCE (exp1, exp2, exp3,..)
--exp1이 null이면 exp2 반환, exp2도 null이면 exp3 반환
SELECT 
last_name AS 이름,
salary AS 월급,
commission_pct AS 커미션pct,
COALESCE((salary + (commission_pct*salary)), salary + 2000) AS 월급인상
    FROM employees
ORDER BY 3;    

--예제) employees 테이블에서 아래와 같이 이름, 월급(salary),커미션(commission_pct)를  NVL 함수사용, 
--연봉은 ( 월급*12) + (월급*12*커미션) 이다.
SELECT
last_name,
salary,
NVL(commission_pct,0),
(salary*12)+ (salary*12*NVL(commission_pct,0)) AS 연봉
    FROM employees
ORDER BY salary DESC;    

--예제) 위의 예제에 더하여 연봉계산은 NVL2 함수를 사용하여 커미션이 있을때와 없을때 계산방법을 나타냅니다.
SELECT
last_name,
salary,
NVL(commission_pct,0),
(salary*12)+ (salary*12*NVL(commission_pct,0)) AS 연봉,
NVL2(commission_pct,'SAL+COMM', 'SAL')
    FROM employees
ORDER BY salary DESC; 

--예제) employees 테이블에서 first_name 과 last_name 의 길이 LENGTH를 비교해서 같으면 null 값을 
--아니면 LENGTH(first_name) 값을 출력하라.
SELECT 
first_name,
length(first_name), 
last_name,
length(last_name),
NULLIF(length(first_name), length(last_name))
    FROM employees;




--DECODE함수
SELECT 
last_name AS 이름, job_id, salary,
    DECODE(job_id, 'IT_PROG',   salary * 1.10,
                    'ST_CLERK', salary * 1.15,
                    'SA_REP',   salary * 1.20,
                                salary) AS 수정월급
FROM employees;

--예제. employees 테이블에서 DECODE 함수를 이용해서 월급에 따른 세율을 나타내세요.
SELECT  
last_name AS 이름,
job_id AS 직무,
salary AS 월급,
    DECODE( TRUNC(salary/2000), 0, 0,
                                1, 0.09,
                                2, 0.2,
                                3, 0.3,
                                4, 0.4,
                                5, 0.42,
                                6, 0.44,
                                   0.45) AS 세율
FROM employees;
                                 

--CASE함수.
SELECT
last_name AS 이름,
job_id,
salary,
    CASE WHEN salary<5000  THEN 'Low'
         WHEN salary<10000 THEN 'Medium'
         WHEN salary<20000 THEN 'Good'
         ELSE                   'Excellent'
    END AS 급여수준
FROM employees;    


--예제)employees 테이블에서 job_id가 IT_PROG라면 employee_id, first_name, last_name, salary를 출력하되 
--salary가 9000 이상이면 ‘상위급여’, 6000과 8999 사이면 ‘중위급여’, 그 외는 ‘하위급여’라고 출력하세요.

SELECT
employee_id,
first_name,
last_name,
salary,
    CASE WHEN salary>=9000                 THEN '상위급여'
         WHEN salary between 6000 AND 8999 THEN '중위급여'
         ELSE                                   '하위급여'
    END AS 급여등급 
FROM employees
    WHERE job_id = 'IT_PROG';
    
    
SELECT *
    FROM employees;







