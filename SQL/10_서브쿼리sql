--서브 쿼리

--Abel 직원의 급여보다 더 많은 직원들은?
--Abel의 급여 확인
SELECT
salary
FROM employees
WHERE last_name = 'Abel';

--서브쿼리 이용
SELECT 
employee_id, last_name, salary
FROM employees
WHERE salary>(SELECT salary 
              FROM employees 
              WHERE last_name = 'Abel');

--단일행 연산자를 사용하면 서브쿼리의 리턴은 하나의 행이어야 한다.
--연산자는 (=,>,<,<=,>=,  <>,!=)

SELECT *
FROM employees
WHERE job_id =(SELECT job_id 
              FROM employees 
              WHERE last_name = 'Abel');


---에러가 나는 경우 (단일행 연산자를 사용한 단일 행 서브쿼리의 리턴이 하나의 행이 아닐 경우)
SELECT 
employee_id, last_name, salary
FROM employees
WHERE salary>(SELECT salary 
              FROM employees 
              WHERE department_id = 30);

--그룹함수를 서브쿼리로 이용
--서브쿼리를 이용해 where절에 집계함수 사용 가능.
--아래 예의 경우, 결과적으로 MAX(salary)를 가진 것이 누구인지 알 수 있음
SELECT *
FROM employees
WHERE salary = (SELECT MAX(salary) 
                FROM employees);

--HAVIN절 서브쿼리
--HAVING절에도 서브쿼리 사용 가능. --90번 부서의 직원 수보다 많은
SELECT 
department_id,
COUNT(employee_id)
    FROM employees
GROUP BY department_id
HAVING COUNT(employee_id)> (SELECT COUNT(*)
                            FROM employees
                            WHERE department_id = 90);


--예제) 사원 'Abel'(last_name) 보다 급여가 많은 사원의 last_name , salary 를 나타내어라.(서브쿼리 사용)
SELECT
last_name,
salary
    FROM employees
WHERE salary > (SELECT salary
                FROM employees
                WHERE last_name= 'Abel');


--예제) 'Bull'란 last_name을 가진 사원의 부서에서 Bull보다 높은 급여를 받는 사원들을 출력하라.(서브쿼리 사용)
SELECT
employee_id AS 직원번호,
last_name AS 이름,
department_id AS 부서번호,
salary AS 급여
FROM employees
WHERE department_id = (SELECT department_id
                        FROM employees
                        WHERE last_name= 'Bull') 
      AND salary> (SELECT salary
                    FROM employees
                    WHERE last_name= 'Bull');


--예제) 'Russell'이란 last_name의 직원번호를 manager_id로 가지는 직원들의 
--last_name, salary, manager_id를 출력하시오.
SELECT
last_name,
salary,
manager_id
FROM employees
WHERE manager_id = (SELECT employee_id
                    FROM employees
                    WHERE last_name = 'Russell');


--예제) jobs 테이블에 job_title이 'Stock Manager' 의  job_id를 가진 직원들의 정보를 
--Employees 테이블에서 찾아서 출력하시오.
SELECT *
FROM employees
WHERE job_id = (SELECT job_id
                FROM jobs
                WHERE job_title = 'Stock Manager');
                


-----------------------
--다중행 서브쿼리
--연산자 (in, any, all)


SELECT salary
    FROM employees
    WHERE department_id= 90;

--IN
SELECT employee_id, first_name, last_name, salary
FROM  employees
WHERE salary IN (SELECT salary
                 FROM employees
                 WHERE department_id= 90);


--ANY 하나의 조건만 만족해도 됨
SELECT employee_id, first_name, last_name, salary
FROM  employees
WHERE salary >= ANY (SELECT salary    --어떤 것이든(하나의 조건만 만족해도) 그것과 같거나 크면 됨.
                    FROM employees
                    WHERE department_id= 90);


--ALL 모든 조건 만족
SELECT employee_id, first_name, last_name, salary
FROM  employees
WHERE salary >= ALL (SELECT salary    --이 경우 가장 큰 값보다 커야할 것. 모두 만족시켜야 하므로.
                    FROM employees
                    WHERE department_id= 90);

--예제 1) 부서번호(department_id)가  20번인 직원들의 매니저아이디(manager_id)와 
--같은 매니저를 가지는  직원들을 출력하라. (단 20번 부서의 직원은 제외!)
SELECT
employee_id,
first_name,
job_id AS 직종,
salary AS 급여
FROM employees
WHERE manager_id IN (SELECT manager_id
                    FROM employees
                    WHERE department_id = 20)
     AND department_id != 20;
                    

--예제) job_id가  'ST_MAN'인 직원들중 어느 한직원 보다도 급여가 작은 직원들을 출력하라. (ANY) 

SELECT
employee_id, last_name, job_id, salary
FROM employees
WHERE salary < ANY (SELECT salary
                    FROM employees
                    WHERE job_id = 'ST_MAN');

                     

--예제)직책이 'IT_PROG' 인 직원들보다 급여가 작은 직원들을 출력하시오.(ALL)
SELECT
employee_id, last_name, job_id, salary
FROM employees
WHERE salary < ALL(SELECT salary
                    FROM employees
                    WHERE job_id = 'IT_PROG');




---------------------------------------
--다중열 서브쿼리
--부서별로 최소 급여를 받는 사원의 부서번호, 사원번호, 이름, 급여 정보를 검색

SELECT 
department_id AS 부서번호,
employee_id As 사원번호,
first_name As 이름,
salary
FROM employees
WHERE (department_id, salary) in (SELECT department_id, MIN(salary)
                                    FROM employees
                                    --WHERE job_id = 'IT_PROG' 
                                    GROUP BY department_id)
ORDER BY department_id;                                    


--예제) employees 테이블에서 job_id별로 가장 낮은 salary가 얼마인지 찾아보고, 
--찾아낸 job_id별 salary에 해당하는 직원의 first_name, job_id, salary, department_id 를 출력하시오. 
--(salary 내림차순 정렬)

SELECT first_name, job_id, salary, department_id
FROM employees
WHERE (job_id, salary) IN (SELECT job_id, MIN(salary)
                            FROM employees
                            GROUP BY job_id)
ORDER BY salary DESC;





                
                
            
                
                
