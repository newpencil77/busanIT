--DML작업

--INSERT : 입력하기
--1. 실행 전 열과 제약조건을 확인(DESC+ 테이블). 제약조건이 not null인 열은 반드시 값을 입력해줘야함
DESC departments;
--2. 테이블의 제약조건 확인 외래키의 경우, 참조해온 곳에 있는 값만 넣어야함.


--전체 열을 다 입력하는 방법 1.  보기엔 더 좋음.
INSERT INTO departments(department_id, department_name, manager_id, location_id)
VALUES                  (71, '개발부 1', 100, 1700);
commit;
--department_id는 pk 기본키이기 때문에 기존 값과 중복되면 안됨.
--manager_id와 location_id는 외래키

----전체 열을 다 입력하는 방법 2.테이블 옆 괄호 안에 열을 입력하지 않으면 값을 다 입력해야함.
INSERT INTO departments
VALUES                  (72, '개발부 2', 100, 1700);
commit;

--열의 순서를 바꿀 경우, 가능함.
INSERT INTO departments(department_id, manager_id, department_name, location_id)
VALUES                  (73, 100, '개발부 3',1700);
commit;

--INSERT에서 생략된 컬럼은 널 값이 입력됨.(제약조건이 not null이면 생략할 수 없음)
INSERT INTO departments(department_id, department_name)
VALUES                  (74, '개발부 4');
commit;

--null값 직접 입력 가능
INSERT INTO departments(department_id, department_name, manager_id, location_id)
VALUES                  (75, '개발부 5', null, null);
commit;




--날짜 입력
--SYSDATE
INSERT INTO employees(employee_id, first_name, last_name, email, hire_date, job_id)
VALUES               (1, '홍','길동','hong@naver.com',sysdate,'IT_PROG');
commit;

--TO_DATE
INSERT INTO employees(employee_id, first_name, last_name, email, hire_date, job_id)
VALUES               (2, '강','길동','kang@naver.com',To_date('2020-04-23','YYYY-MM-DD'),'IT_PROG');
commit;



--사용자로부터 입력받기 -- & 를 사용하면 값을 직접 입력 가능함
INSERT INTO departments (department_id, department_name)
VALUES                  (&dpet_id, '&dname');  
commit;




--SELECT문의 결과를 테이블에 입력하기

--테이블 생성
CREATE TABLE XX_emp
(EMPNO NUMBER,
ENAME VARCHAR2(100),
SALARY NUMBER);

--INSERT 해줌. 각각 자료형이 맞아야함.
INSERT INTO XX_emp(empno, ename, salary)
SELECT employee_id, first_name, salary
FROM employees;

SELECT *
FROM xx_emp;



-----------------------------------------
--INSERT 실행 중에 에러가 나는 경우

-- 1. 기본키에 이미 있는 값을 입력할 경우(기본키에 중복 값 입력)
--오류 보고 -ORA-00001: unique constraint (HR.DEPT_ID_PK) violated
INSERT INTO departments(department_id, department_name, manager_id, location_id)
VALUES                  (10, '개발부 10', 100, 1700); --기본키인 department_id 에 이미 있는 값 입력

--2. FK(외래키)에 참조되지 않은 값을 입력(참조 테이블에 없는 값)
--오류 보고 - ORA-02291: integrity constraint (HR.DEPT_LOC_FK) violated - parent key not found
INSERT INTO departments(department_id, department_name, manager_id, location_id)
VALUES                  (5,'개발부 5', 100, 1);

--3. 데이터의 종류가 다른 것일 때
--ex. 오류 보고 -ORA-01722: invalid number
INSERT INTO departments(department_id, department_name, manager_id, location_id) --location_id는 숫자형임
VALUES                  (5,'개발부 5', 100, 'D1');

--4. 데이터 사이즈가 맞지 않을 때
--ex.오류 보고 -ORA-12899: value too large for column "HR"."DEPARTMENTS"."DEPARTMENT_NAME" (actual: 83, maximum: 30)
--이 경우는 최대 30자의 문자를 넣을 수 있는데 83자를 넣은 경우.
INSERT INTO departments(department_id, department_name, manager_id, location_id)
VALUES                  (5,'개발부 5 개발부 5 개발부 5 개발부 5 개발부 5 개발부 5 개발부 5', 100, 1);



--예제 1) departments 테이블에 다음과 같이 각각의 department_id, department_name,
--manager_id가 200, location_id가 1700인 행을 3개 입력하세요.

DESC departments;

INSERT INTO departments (department_id, department_name, manager_id, location_id)
                VALUES  (271, 'Sample Dept 1', 200, 1700);

--지금 하는 것들은 프로그램을 작성하는 것이 아니라, 질의문(SQL)의 개념.
--그냥 위에서 숫자만 바꿔 적어 실행시켜도 여러 데이터를 추가할 수 있음
INSERT INTO departments (department_id, department_name, manager_id, location_id)
                VALUES  (272, 'Sample Dept 2', 200, 1700);
                
INSERT INTO departments (department_id, department_name, manager_id, location_id)
                VALUES  (273, 'Sample Dept 3', 200, 1700);

-- 예제)아래와 같이 테이블을 만든후  
--SELECT 문을 이용하여 departments 테이블 내용을 전부 입력하시오. ( 위의 scott예제 3번째 방법)

CREATE TABLE copy_departments( department_id number(4),
                              department_name varchar2(30 byte),
                              manager_id number(6),
                              location_id number(4));

INSERT INTO copy_departments
SELECT * FROM departments;



-----------



CREATE TABLE COPY_EMP  -- 복사는 하지만 기본키, 외래키를 가져오질 못함. 관계
AS
SELECT * FROM employees;



select * from copy_emp;

desc copy_emp;




--create table testdep AS
--SELECT *
--FROM departments;
--
--
--insert into testdep
--select *
--from 

delete from testdep; --테이블 안의 내용만 지움.

INSERT into testdep
SELECT * FROM departments AS of timestamp(SYSTIMEStamp - interval '120'minute);

select*
from testdep;

DESC testdep;


