--제약조건의 추가 및 수정

CREATE TABLE class(
cno VARCHAR2(2),
cname VARCHAR2(50)
);

INSERT INTO class VALUES ('01', '데이터베이스');
INSERT INTO class VALUES ('02', '자바');

--클래스 테이블에 기본키 추가
ALTER TABLE class
ADD CONSTRAINT class_cno_pk PRIMARY KEY(cno);
--클래스 테이블에 유니크키(고유키) 추가
ALTER TABLE class
ADD CONSTRAINT class_cname_uk UNIQUE(cname);

--제약 조건 조회 명령
SELECT *
FROM ALL_CONSTRAINTS --모든 제약조건
WHERE TABLE_NAME = 'CLASS'; --테이블 명은 대문자로 입력
--P(PK), R(FK), U(UK), C(NOT NULL, CHECK)
--교재 364p 참고.

--학생 테이블에 기본키 추가
ALTER TABLE student
ADD CONSTRAINT student_sno_pk PRIMARY KEY(sno);
--학생 테이블의 sname에 NOT NULL 추가 (feat. MODIFY)
ALTER TABLE student 
MODIFY sname CONSTRAINT student_sname_nn NOT NULL;
--학생 테이블에 외래키 추가

/*
select * from student; 
UPDATE student 
SET cno = '01'
WHERE sno ='0416';
*/
ALTER TABLE student
ADD CONSTRAINT student_cno_fk FOREIGN KEY(cno)
REFERENCES CLASS(cno);


select * from class;

CREATE TABLE student(
sno VARCHAR2(4),
sname VARCHAR2(50),
cno VARCHAR2(2)
);

INSERT INTO student VALUES ('0414', '홍길동', '01');
INSERT INTO student VALUES ('0415', '임꺽정', '02');
INSERT INTO student VALUES ('0416', '이순신', '03');

commit;

SELECT *
FROM student;



--제약 조건이 있는 테이블 삭제
DROP TABLE class; --삭제 안 됨.
--ORA-02449: unique/primary keys in table referenced by foreign keys

DROP TABLE class CASCADE CONSTRAINTS; 
--CASCADE CONSTRAINTS를 덧붙이면 해당 테이블을 참조하고 있던 다른 테이블의 열도 같이 삭제됨 



-------------------------------------------------
--테이블에 컬럼 추가

--서브쿼리를 사용해 새 테이블 만들기
--1. 90번 부서의 직원들을 새 테이블 e_emp에 입력
CREATE TABLE E_EMP
AS 
SELECT employee_id, first_name, last_name, salary, department_id
FROM employees
WHERE department_id = 90; 
----테이블 복사시 not null만 복사되고 나머지 제약조건은 복사가 안 됨.

SELECT * FROM e_emp;
DESC e_emp;

--2. 열의 이름을 지정하여 e_emp2 생성
CREATE TABLE e_emp2(emp_id, fname, lname, sal, dept_id)
AS
SELECT employee_id, first_name, last_name, salary, department_id 
FROM employees
WHERE department_id = 90;

SELECT * FROM e_emp2;





----------
--열 추가
ALTER TABLE e_emp
ADD (GENDER VARCHAR2(1));  --입력 안 된 값은 null

ALTER TABLE e_emp
ADD (커미션 NUMBER DEFAULT 0 NOT NULL);  --디폴트 값을 0으로 지정. 널 값 안 됨.

ALTER TABLE e_emp
ADD (커미션2 NUMBER DEFAULT 0);

--한 번에 두 개의 열 추가. 콤마로 구분
ALTER TABLE e_emp
ADD (날짜 DATE DEFAULT SYSDATE, 제작자 VARCHAR2(100) DEFAULT USER); --USER는 현재 계정을 뜻함.

SELECT * FROM e_emp;

--열의 수정. ALTER~ MODIFY
--데이터 값 변경. 안에 있는 데이터값보다 작게 만들 순 없음
ALTER TABLE e_emp
MODIFY (제작자 VARCHAR2(200)); -- 데이터 크기를 200으로 바꿈

ALTER TABLE e_emp
MODIFY (제작자 VARCHAR2(50));

ALTER TABLE e_emp
MODIFY (제작자 VARCHAR2(1));
--ORA-01441: cannot decrease column length because some value is too big
--01441. 00000 -  "cannot decrease column length because some value is too big"
--현재 들어있는 값인 HR이 2바이트이므로 오류가 남. 

DESC e_emp;

--데이터 타입을 변경. 데이터가 없거나 null이어야 함.
ALTER TABLE e_emp
MODIFY (GENDER NUMBER); --GENDER엔 모두 null이 입력되어 있었음. 그래서 데이터 타입 변경 가능.

UPDATE e_emp
SET 제작자 = NULL; --제작자열의 모든 행을 null값으로 채움. 

------열의 삭제. ALTER TABLE 테이블 DROP COLUMN 컬럼
--데이터가 있어도 삭제됨.
ALTER TABLE e_emp
DROP COLUMN 제작자;

--여러개의 열 삭제
ALTER TABLE e_emp
DROP (GENDER, 커미션, 커미션2, 날짜);

SELECT * FROM e_emp;


-----------------------------//
--테이블의 열 및 이름 수정
SELECT * FROM e_emp;

ALTER TABLE e_emp
RENAME COLUMN department_id TO 부서번호;  --department_id 를 부서번호 로 수정함

ALTER TABLE e_emp
RENAME COLUMN salary TO 급여;

ALTER TABLE e_emp
RENAME COLUMN employee_id TO 직원번호;


--테이블 이름 수정
RENAME e_emp TO 직원테이블;

SELECT * FROM 직원테이블;




--예제) employees 테이블의 job_id 가 'ST_MAN' 인 직원들을 새 테이블 stmans 를 만들어 입력하라. 
--단 테이블의 컬럼 이름은  id , job , sal ( 직원 테이블의  employee_id, job_id, salary) 
CREATE TABLE stmans (id, job, sal)
AS
SELECT employee_id, job_id, salary 
FROM employees
WHERE job_id = 'ST_MAN';

select * FROM stmans;















